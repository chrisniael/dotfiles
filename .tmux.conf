# default-terminal 会影响 ohmyzsh 的 AUTO_TITLE 功能 (https://github.com/ohmyzsh/ohmyzsh/issues/3579)
# 设置为 tmux-256color 时，在 Mac 上执行 clear 的时候会提示："Cannot read termcap database; using dumb terminal settings." (https://github.com/tmux/tmux/wiki/FAQ)
# 设置为 screen-256color 会导致 vim 不能使用 italic 字体 (https://github.com/neovim/neovim/issues/3461#issuecomment-268640486)
# Getting "WARNING: terminal is not fully functional" when using tmux-256color on macOS Catalina (https://github.com/tmux/tmux/issues/2262)
# 修复环境变量 $TERM 类型不支持 italic 错误 (https://github.com/mhinz/dotfiles/blob/master/bin/fix-term, https://www.reddit.com/r/vim/comments/24g8r8/italics_in_terminal_vim_and_tmux/)
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# tmux 响应 ESC 按键延迟
# Set the time in milliseconds for which tmux waits after an escape is input to determine if it is part of a function or meta key sequences.
# The default is 500 milliseconds.
# 解决 tmux 里使用 vim ESC 按键反馈很慢（从 Insert 模式到 Normal 模式）
# https://zhuanlan.zhihu.com/p/47801331
# https://superuser.com/questions/942677/consequences-of-escape-time-0-tmux-setting
# https://github.com/tmux/tmux/issues/907
set-option -sg escape-time 10  # 单位：毫秒

# neovim +healthcheck advice
set-option -g focus-events on

unbind C-b
set -g prefix C-j
bind C-j send-prefix

# 退出 session 的最后一个 windows 时切换到其他 session，如果还有 session 存在的话
set-option -g detach-on-destroy off

# Auto change title
set -g set-titles on
# #T 表示 pane name
# ohmyzsh 这块处理和 TERM 的值有关
# set -g set-titles-string "#T"
# 设置为 #h 暂时是比较好的方案, #h 的意思是 hostname
# mac 设置 houstname
# scutil --set HostName xxx
# scutil --set LocalHostName xxx
set -g set-titles-string "#h"
# set -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name, active(or not)
# set -g set-titles-string '#h (#{pane_current_command}) [#{b:pane_current_path}]' # window number,program name, active(or not)

set -g base-index 1
set -g pane-base-index 1

# set OSC 52 escape sequence & terminal clipboard
set -g set-clipboard off

set -g mouse on

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
# 这样写不能跨平台使用
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel  # Mac
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p"  # Linux 使用 xsel
# mac/linux 统一改用 xclip
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection primary"

# 鼠标选择文本时复制到系统剪切板，默认是复制到 paste-buffer
# tmux-yank 插件会覆盖这个配置
# https://unix.stackexchange.com/a/398805
# https://github.com/tmux/tmux/issues/140
# https://unix.stackexchange.com/a/332425
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-no-clear
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection primary"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C new-window -c "$HOME"

# detach tmux 的时候也退出 ssh/shell
# detach tmux 的时候关闭 xclip child process，否则 ssh 连接会退出不了
bind d run-shell "killall xclip >/dev/null 2>&1; tmux detach -P"

bind K kill-server

# prefix C-o 容易和 prefix 误触，索性改成和 prefix o 一样的功能
# https://unix.stackexchange.com/questions/53154/how-do-i-cycle-through-panes-inside-a-window-in-tmux-like-in-screen
unbind C-o
# 容易在 Vim 中误触发，暂时关掉
# bind C-o select-pane -t :.+

# 显示 pane 编号时不自动消失
bind q display-panes -d 0

# 强制调整 window 大小至最大
# https://unix.stackexchange.com/a/570015
bind r resize-window -A

# 返回上一个 pane
# https://stackoverflow.com/a/31988685
# 默认存在快捷键：prefix + ;
# bind -r L select-pane -l

set -g status-position top

set -g status-interval 2
set -g status-justify left
setw -g monitor-activity on

# 忽略 powerline-daemon 已经启动返回的错误
# run-shell "powerline-daemon -q || true"
# if-shell 'uname | grep -q Darwin' 'source /usr/local/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf'
# if-shell 'grep -q ubuntu /etc/os-release 2>/dev/null' 'source /usr/local/lib/python3.7/dist-packages/powerline/bindings/tmux/powerline.conf'
# if-shell 'grep -q arch /etc/os-release 2>/dev/null' 'source /usr/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf'
# if-shell 'grep -q centos /etc/os-release 2>dev/null' 'source /usr/local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf'

# tmux-resurrect config
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-save-shell-history 'on'

# tmux-continuum config
set -g @continuum-save-interval '0'
set -g @continuum-restore 'on'

# tmux-yank config
# macOS: brew install xclip
# arch: pacman -S xclip
# centos: yum install xclip
set -g @override_copy_command 'xclip -i -selection primary'
set -g @custom_copy_command 'xclip -i -selection primary'
set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'primary'

# List of plugins
# First of all, install tmp
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'


## COLORSCHEME: gruvbox dark (medium)
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set -g status-justify left

set-option -g status-left "#[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]░▒▓#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]▓▒░"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]░▒▓#[bg=colour239,fg=colour246] %Y-%m-%d #[bg=colour244,fg=colour237] %r #[bg=colour250,fg=colour237] #h ░▒▓"

set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]▓▒░#[bg=colour214,fg=colour239] #I#[bg=colour214,fg=colour239,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]▓▒░"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]▓▒░#[bg=colour239,fg=colour223] #I #W #[bg=colour237,fg=colour239,noitalics]▓▒░"
